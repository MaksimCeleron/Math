<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="ProgramLogoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>